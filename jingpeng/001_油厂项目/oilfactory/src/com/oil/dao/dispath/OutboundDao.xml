<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oil.dao.dispath.OutboundDao">
	<!-- 根据用户名称获取对应的销售订单  -->
	<select id="getSalesOrderList" parameterType="java.util.Map" resultType="SalesOrderEntity">
		SELECT DISTINCT
		  s.Id as salesOrderId   						  -- 销售订单id
		  , s.OrderNumber as orderNumber                  -- 订单编号
		  , cus.CustomerCode as customerCode              -- 客户编号
		  , CONCAT(pi.Province, '-', ci.CityName, '-', cus.CustomerName) as customerName -- 客户名称
		from
		  exportMeasure d                                 -- 调度出库表
		  left join salesorder s                          -- 销售订单表
		    on d.SalesOrderId = s.Id                      -- 订单id
		    and s.IsDel = 0  
		  left join customerinfo as cus                   -- 客户信息表
		    on s.CustomerId = cus.Id 
		  left join userinfo as ui 
		    on s.UserInfoId = ui.Id 
		  left join cityinfo as ci 
		    on cus.CityId = ci.Id 
		  left join provinceinfo as pi 
		    on ci.ProvinceId = pi.Id 
		  <if test="keyword != null and keyword != ''">
		  and s.OrderNumber like concat('%',#{keyword},'%') 
		  </if>
		where
		  d.IsDel = 0 
		ORDER BY
		  cus.CustomerCode
	</select>

<select id="getInfoListEX" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT
		*
	FROM
		(
		SELECT
		  s.Id AS id                                      -- 出库单id
		  , s.Serial_ID AS serialId                       -- 流水号
		  , s.Suttle AS weighEX
		  , IFNULL(s.Suttle , '') AS allotWeight
		  , DATE_FORMAT(s.CreaterDate, '%Y-%m-%d %H:%i:%s') as createrDate  -- 创建日期
		  , s.TareWeight AS tareWeight
		  , s.GrossWeight  as grossWeight
		  , s.Consignee as consignee
		  , s.ConsigneePhone as consigneePhone            -- 收货人电话
		  , now.TransportBalance AS nowTransportBalance
		  , now.ConsigneeAddress AS consigneeAddress
		  , s.Client AS client
		  , tr.Id AS ttId
		  , tr.BillNumber AS billNumber
		  , tr.type AS type
		  , IFNULL(tr.ReceiptWeight, 0) AS receiptWeight
		  , tr.CollectWeigh AS collectWeigh
		  , tr.RiseLoss AS riseLoss
		  , tr.Remarks AS trRemarks
		  , t.OrderNumber as orderNumber                  -- 销售订单编号
		  , t1.OrderDetailedNumber AS orderDetailedNumber
		  , t1.SalePrice AS salePrice
		  , t1.SaleMoney AS saleMoney
		  , t1.AsphaltContent AS asphaltContent
		  , t1.TransportBalance AS transportBalance
		  , t1.TaxRate AS taxRate
		  , de.Content AS taxRateContent                  -- 数据字典税率
		  , t1.ExpectedDeliveryDate as expectedDeliveryDate
		  , t1.StartAddress AS startAddress
		  , t1.Distance AS distance
		  , t1.Remarks AS t1Remarks
		  , s.PlateNumber AS plateNumber                  -- 车牌号码
		  , s.DeliveryMan AS carOwner                     -- 车主
		  , s.DeliveryManPhone AS carOwnerTelephone       -- 车主电话
		  , IFNULL(s.Suttle, 0.00) AS suttle              -- 净重
		  , s.Amount AS amount                            -- 结算重
		  , s.ReturnWeight AS returnWeight
		  , s.OutType AS outType                          -- 是否调拨
		  , DATE_FORMAT(s.FactoryTime, '%Y-%m-%d %H:%i:%s') AS factoryTime -- 出厂时间
		  , s.OutTypeMark AS outTypeMark
		  , now.SerialID AS DSerialID
		  , now.id AS DId
		  , 99 AS nowoutType
		  , s.Remarks AS sRemarks                         -- 备注
		  , s.ValidFlag AS validFlag                      -- 有效标识 0无效 1有效
		  , m.MaterielName AS materielName                -- 物料名称
		  , m.MaterielModel AS materielModel              -- 规格型号
		  , u.Id AS uid                                   -- 客户ID
		  , u.CustomerName as customerName
		  , u.CustomerCode as customerCode 
		FROM
		  exportMeasure s                                 -- 调度出库表
		  LEFT JOIN salesorder t                          -- 销售订单表
		    ON s.SalesOrderId = t.Id                      -- 销售订单id
		    AND t.IsDel = 0
		  LEFT JOIN salesorderdetailed t1                 -- 销售订单明细表
		    ON s.OrderDetailedId = t1.Id 
		    AND t1.IsDel = 0
		  LEFT JOIN CustomerInfo u                        -- 客户信息表
		    ON u.Id = t.CustomerId                        -- 客户id
		    AND u.IsDel = 0
		  LEFT JOIN contractinfo c                        -- 合同信息表
		    ON t.ContractId = c.Id                        -- 合同id
		    AND c.IsDel = 0
		  LEFT JOIN materielinfo m                        -- 物料信息表
		    ON s.ProductID = m.Id                         -- 物料id
		    AND m.IsDel = 0
		  LEFT JOIN outemptyrelation ot                   -- 空发信息表
		    ON ot.OutWarehouseId = s.Id                   -- 空发id
		    AND ot.IsDel = 0
		  LEFT JOIN noweighoutwarehouse now
		    ON now.DispatchOutWarehouseId = s.Id 
		    AND now.IsDel = 0 
		  LEFT JOIN transportlist tr 
		    ON tr.SerialID = s.Serial_ID 
		    AND tr.IsDel = 0 
		  LEFT JOIN datadictionary de 
		    ON de.Type = 'sl' 
		    AND de.CODE = t1.TaxRate                      -- 数据字典税率
		WHERE
		  s.IsDel = 0
		<if test="plateNumber != null and plateNumber != ''">
		  and s.PlateNumber = #{plateNumber}
		</if>
		<if test="startTime != null and startTime != ''">
	      and <![CDATA[ DATE_FORMAT(t1.ExpectedDeliveryDate, '%Y-%m-%d') >=  #{startTime}  ]]>
	    </if>
	    <if test="endTime != null and endTime != ''">
	      and <![CDATA[ DATE_FORMAT(t1.ExpectedDeliveryDate, '%Y-%m-%d') <=  #{endTime}  ]]>
	    </if>   
	    <if test="materielType != null and materielType != ''">
	      AND s.ProductID IN (SELECT Id FROM materielinfo WHERE MaterielType = #{materielType})
	    </if> 
		-- GROUP BY s.Serial_ID
		UNION ALL
			SELECT
			  n.Id AS id                                      -- 未称重id
			  , n.SerialID AS serialId                        -- 流水号
			  , IF (tr.type = 1, n.AllotWeight, 0) AS weighEX
			  , IFNULL(n.AllotWeight, '') AS allotWeight
			  , DATE_FORMAT(s.CreaterDate, '%Y-%m-%d %H:%i:%s') as createrDate
			  , s.TareWeight  AS tareWeight
			  , n.AllotWeight + (s.TareWeight / 1000) as grossWeight
			  , s.Consignee as consignee
			  , s.ConsigneePhone as consigneePhone
			  , n.TransportBalance AS nowTransportBalance
			  , n.ConsigneeAddress AS consigneeAddress
			  , n.Client AS client
			  , tr.Id AS ttId
			  , tr.BillNumber AS billNumber
			  , tr.type AS type
			  , IFNULL(tr.ReceiptWeight, 0) AS receiptWeight
			  , tr.CollectWeigh AS collectWeigh
			  , tr.RiseLoss AS riseLoss
			  , tr.Remarks AS trRemarks
			  , t.OrderNumber as orderNumber
			  , t1.OrderDetailedNumber AS orderDetailedNumber
			  , t1.SalePrice AS salePrice
			  , t1.SaleMoney AS saleMoney
			  , t1.AsphaltContent AS asphaltContent
			  , t1.TransportBalance AS transportBalance
			  , t1.TaxRate AS taxRate
			  , de.Content AS taxRateContent
			  , t1.ExpectedDeliveryDate as expectedDeliveryDate
			  , t1.StartAddress AS startAddress
			  , t1.Distance AS distance
			  , t1.Remarks AS t1Remarks
			  , s.PlateNumber AS plateNumber                  -- 车牌号码
			  , s.DeliveryMan AS carOwner                     -- 车主
			  , s.DeliveryManPhone AS carOwnerTelephone       -- 车主电话
			  , IFNULL(s.Suttle, 0.00) AS suttle              -- 净重
			  , s.Amount AS amount                            -- 结算重
			  , s.ReturnWeight AS returnWeight
			  , 99 AS outType                                 -- 是否未称重
			  , DATE_FORMAT(n.CreaterDate, '%Y-%m-%d %H:%i:%s') AS factoryTime -- 出厂时间
			  , s.OutTypeMark AS outTypeMark
			  , s.Serial_ID AS DSerialID
			  , s.id AS DId
			  , s.outType AS nowoutType
			  , s.Remarks AS sRemarks                         -- 备注
			  , s.ValidFlag AS validFlag                      -- 有效标识 0无效 1有效
			  , m.MaterielName AS materielName                -- 物料名称
			  , m.MaterielModel AS materielModel              -- 规格型号
			  , u.Id AS uid                                   -- 客户ID
			  , u.CustomerName as customerName
			  , u.CustomerCode as customerCode 
			FROM
			  noweighoutwarehouse n                           -- 调度入库单
			  LEFT JOIN exportMeasure s 
			    ON n.DispatchOutWarehouseId = s.Id 
			    AND s.IsDel = 0 
			  LEFT JOIN salesorder t                          -- 销售订单表
			    ON s.SalesOrderId = t.Id                      -- 销售订单id
			    AND t.IsDel = 0
			  LEFT JOIN salesorderdetailed t1                 -- 销售订单明细表
			    ON s.OrderDetailedId = t1.Id 
			    AND t1.IsDel = 0
			  LEFT JOIN CustomerInfo u                        -- 客户信息表
			    ON u.Id = t.CustomerId                        -- 客户id
			    AND u.IsDel = 0
			  LEFT JOIN contractinfo c                        -- 合同信息表
			    ON t.ContractId = c.Id                        -- 合同id
			    AND c.IsDel = 0
			  LEFT JOIN materielinfo m                        -- 物料信息表
			    ON s.ProductID = m.Id                         -- 物料id
			    AND m.IsDel = 0
			  LEFT JOIN outemptyrelation ot                   -- 空发信息表
			    ON ot.OutWarehouseId = s.Id                   -- 空发id
			    AND ot.IsDel = 0
			  LEFT JOIN transportlist tr 
			    ON tr.SerialID = n.SerialID 
			    AND tr.IsDel = 0 
			  LEFT JOIN datadictionary de 
			    ON de.Type = 'sl' 
			    AND de.CODE = t1.TaxRate                      -- 数据字典税率
			WHERE
			  s.IsDel = 0
		<if test="plateNumber != null and plateNumber != ''">
		  and s.PlateNumber = #{plateNumber}
		</if>
		<if test="startTime != null and startTime != ''">
	      and <![CDATA[ DATE_FORMAT(t1.ExpectedDeliveryDate, '%Y-%m-%d') >=  #{startTime}  ]]>
	    </if>
	    <if test="endTime != null and endTime != ''">
	      and <![CDATA[ DATE_FORMAT(t1.ExpectedDeliveryDate, '%Y-%m-%d') <=  #{endTime}  ]]>
	    </if>   
	    <if test="materielType != null and materielType != ''">
	      AND s.ProductID IN (SELECT Id FROM materielinfo WHERE MaterielType = #{materielType})
	    </if> 
	) con
		where 1=1
		<if test="orderNumber != null and orderNumber != ''">
	      and orderNumber = #{orderNumber}    
	    </if>
		<if test="client != null and client != ''">
	      and customerCode = #{client}
	    </if>
ORDER BY
	ttid DESC;
</select>

<select id="getExportmeasures" parameterType="java.util.Map" resultType="java.util.Map">
	select 
		 c.Id            as id       -- 出库单id
		,CONCAT(pi.Province,'-',ci.CityName,'-',cus.CustomerName)as customerName   -- 客户名称
	from exportMeasure d             -- 调度出库表 
	left join salesorder s           -- 销售订单表
		on d.SalesOrderId = s.Id     -- 订单id
		and d.IsDel = 0          
    left join contractinfo c on s.ContractId = c.Id                        
	left join customerinfo as cus                   -- 客户信息表
		on c.CustomerId = cus.Id 
	left join userinfo as ui 
		on c.UserInfoId = ui.Id
	left join cityinfo as ci 
    	on cus.CityId = ci.Id 
	left join provinceinfo as pi 
        on ci.ProvinceId = pi.Id	                                
	where 
	    1=1
		and d.IsDel = 0
		AND s.IsDel = 0
	-- GROUP BY customerName
	order by id desc, customerName 
</select>

<select id="getSalesOrderLists" parameterType="java.util.Map" resultType="java.util.Map">
	select 
		 d.SalesOrderId as salesOrderId   -- 销售订单id
		,s.OrderNumber  as orderNumber    -- 订单编号
	from exportMeasure d             -- 调度出库表 
	left join salesorder s           -- 销售订单表
		on d.SalesOrderId = s.Id     -- 订单id
		and d.IsDel = 0                        
    left join contractinfo c on s.ContractId = c.Id          
	where 
	    s.ContractId = #{contractId}
		and d.IsDel = 0
		AND s.IsDel = 0
	ORDER BY s.OrderNumber
</select>
<!-- 获取调度单已有车牌号  -->
<select id="getPlateNumberList" parameterType="java.util.Map" resultType="String">
	select distinct d.PlateNumber from exportMeasure d where d.IsDel = 0         -- 调度出库表
</select>
<!-- 获取页面list信息  -->
<select id="getInfoList" parameterType="java.util.Map" resultType="OutboundEntity">
	SELECT * from(
		SELECT
		    s.Id                    as id                   -- 出库单id
		  , s.FacingSlipNum         as facingSlipNum        -- 封签号
		  , s.Serial_ID             as SerialId             -- 流水号 
		  , s.SalesOrderId          as salesOrderId         -- 销售订单id
		  , t.OrderNumber           as orderNumber          -- 销售订单编号
		  , t.ContractId            as contractId           -- 合同id
		  , c.ContractNumber        as contractNumber       -- 合同编号
		  , u.Name                  as name                 -- 销售员
		  , s.CreaterDate           as createrDate          -- 操作时间
		  , cus.CustomerCode        as customerCode         -- 客户编号
		  , CONCAT(pi.Province,'-',ci.CityName,'-',cus.CustomerName) as client -- 客户名称
		  , s.CustomerAlias         as customerAlias        -- 客户别称
		  , s.PlateNumber           as plateNumber          -- 车牌号码  
		  , s.CarOwner              as carOwner             -- 车主
		  , s.CarOwnerTelephone     as carOwnerTelephone    -- 车主电话
		  , s.ProductID             as productID            -- 物料id
		  , m.MaterielName          as materielName         -- 物料名称
		  , m.MaterielModel         as materielModel        -- 规格型号
		  , s.Address               as address              -- 送货地址
		  , s.DeliveryMan           as deliveryMan          -- 送货人
		  , s.DeliveryManPhone      as deliveryManPhone     -- 送货电话
		  , s.Consignee             as consignee            -- 收货人
		  , s.ConsigneePhone        as consigneePhone       -- 收货人电话
		  , s.TestReportId          as testReportId         -- 检测报告id
		  , tp.TestReportNumber     as testReportNumber     -- 检测报告编号
		  , DATE_FORMAT(s.FactoryTime , '%Y-%m-%d')          as factoryTime          -- 出厂时间
		  , s.IsExamine             as isExamine            -- 是否审核合格 0:是 1:否
		  , t1.ExpectedDeliveryDate as expectedDeliveryDate -- 预计发货时间
		  , s.OutType               as outType              -- 出库单状态 0：正常 1：整车调拨（作废） 2：半车调拨 3：退货
		  , getContentByCode('ckdzt', s.OutType) as outTypeName -- 出库单状态名称
		  , s.IsTesting             as isTesting            -- 是否检测
		  , s.Amount                as amount               -- 结算数量
		  , s.purchaseContractId    as purchaseContractId   -- 采购合同id
		  , s.LbsMaterialName       as lbsMaterialName      -- 磅单打印物料名称
		  , s.LbsOutputName         as lbsOutputName        -- 磅单输出名称
		  , s.CartWeighType         as cartWeighType        -- 是否大车称重
		  , s.Remarks               as remarks              -- 备注
		  , s.SaleCompanyName       as saleCompanyName      -- 销售公司名称
		  , s.OutTypeMark           as outTypeMark          -- 出库单类型标识 0：出库单 1：未入厂出库单
		  , s.ValidFlag             as validFlag            -- 有效标识 0无效 1有效
		  , s.Suttle                as suttle               -- 净重
		  , s.GrossWeight           as grossWeight          -- 毛重
		  , s.TareWeight            as tareWeight           -- 皮重
		  , s.cancellationCause     as cancellationCause    -- 作废原因
		  , s.StartAddress          as startAddress         -- 起运地
		  , t.Id					as orderId    			-- 销售订单Id
		  , s.SaleCompanyName		as customerName    		-- 销售公司名称
		  , s.OrderDetailedId		as orderDetailedId  	-- 销售订单明细流水号
		  , t1.Transports   
		  , t1.Distance     
		  , t1.ListModel    
		  , t1.TransportBalance  	 as TransportBalances
  		  , t1.Proportion  		 	 as proportion
		  , m2.MaterielName          as materielName2         -- 兑换前物料名称
		  , m2.MaterielModel         as materielModel2        -- 兑换前规格型号
		FROM
		  exportMeasure s                -- 调度出库表
		left join salesorder t           -- 销售订单表
		  on s.SalesOrderId = t.Id       -- 销售订单id
		  and t.IsDel = 0
	    left join userinfo u             -- 用户信息表
		  on u.Id = t.UserInfoId         -- 销售员id
		  and u.IsDel = 0
		left join contractinfo c         -- 合同信息表
		  on t.ContractId = c.Id         -- 合同id
		  and c.IsDel = 0
		left join customerinfo as cus                   -- 客户信息表
			on c.CustomerId = cus.Id 
			and cus.IsDel = 0
		left join userinfo as ui 
			on c.UserInfoId = ui.Id
			and ui.IsDel = 0
		left join cityinfo as ci 
	    	on cus.CityId = ci.Id 
	    	and ci.IsDel = 0
		left join provinceinfo as pi 
	        on ci.ProvinceId = pi.Id
	        and pi.IsDel = 0
		left join materielinfo m         -- 物料信息表
		  on s.ProductID = m.Id          -- 物料id
		  and m.IsDel = 0
		left join salesorderdetailed t1  -- 销售订单明细表
		  on t.Id = t1.SalesOrderId
		  and t1.IsDel = 0
		  AND s.OrderDetailedId = t1.Id
	  	left join materielinfo m2         -- 物料信息表
		  on t1.MaterielId = m2.Id          -- 物料id
		  and m2.IsDel = 0
		left join testreport tp          -- 检测报告单
		  on s.TestReportId = tp.Id      -- 检测报告id
		  and tp.IsDel = 0
		  and tp.Exchange = 1            -- 兑换后检测报告
		where  s.IsDel = 0
		AND t.IsDel = 0
		<if test="id != null and id != 0">
		  and s.Id = #{id}
		</if>
		<if test="type != null and type != ''">
		  AND c.IsApproval = 0
		  AND s.IsExamine is null 
		</if>
		<if test="plateNumber != null and plateNumber != ''">
		  and s.PlateNumber = #{plateNumber}
		</if>
		<if test="startTime != null and startTime != ''">
	      and <![CDATA[ DATE_FORMAT(t1.ExpectedDeliveryDate, '%Y-%m-%d') >=  #{startTime}  ]]>
	    </if>
	    <if test="endTime != null and endTime != ''">
	      and <![CDATA[ DATE_FORMAT(t1.ExpectedDeliveryDate, '%Y-%m-%d') <=  #{endTime}  ]]>
	    </if>
	    <if test="salesOrderId != null and salesOrderId != 0">
	      and s.SalesOrderId = #{salesOrderId}
	    </if>
	    <if test="orderNumber != null and orderNumber != ''">
	      and orderNumber = #{orderNumber}    
	    </if>
	    <if test="plateNumbers != null and plateNumbers != ''">
	      and s.PlateNumber like concat('%',#{plateNumbers},'%')
	    </if>    
	    <if test="materielType != null and materielType != ''">
	      AND s.ProductID IN (SELECT Id FROM materielinfo WHERE MaterielType = #{materielType})
	    </if>    
		order by s.CreaterDate desc
	) t
	WHERE 1=1 
		<if test="client != null and client != ''">
	      and t.CustomerCode = #{client}
	    </if>
</select>
<!-- 出库单作废或者删除 -->
<update id="updateValidFlag" parameterType="java.util.Map">
    UPDATE exportmeasure 
		SET
		  <if test="flag == 0">
		    ValidFlag = 0
		  </if>
		  <if test="flag == 1">
		    IsDel = 1
		  </if>
		  <if test="flag == 2">
		    OutType = 2,
		    ReturnWeight = #{returnWeight}
		  </if>
		  <if test="flag == 3">
		    OutType = #{outType}
		  </if>
		  <if test="consignee != null and consignee != ''">
		    , Consignee = #{consignee}
		  </if>
		  <if test="consigneePhone != null and consigneePhone != ''">
		    , ConsigneePhone = #{consigneePhone}
		  </if>
		  <if test="consigneeAddress != null and consigneeAddress != ''">
		    , ConsigneeAddress = #{consigneeAddress}
		  </if>
		  <if test="customerAlias != null and customerAlias != ''">
		    , CustomerAlias = #{customerAlias}
		  </if>
		  , Reviser = #{userId}
		  , CancellationCause = #{cancellationCause}
		  , ReviserDate = now()
		WHERE
		  Id = #{id}
</update>
<!-- 新增页面获取销售订单编号 -->
<select id="getOrderNumberList" parameterType="java.util.Map" resultType="OrderNumberEntity">
	SELECT
	  s.Id                     as id                     -- id
	  , s.OrderNumber          as orderNumbers           -- 订单编号
	  , s.ContractId           as contractId             -- 合同id
	  , c.ContractNumber       as contractNumber         -- 合同编号
	  , s.CustomerId           as customerId             -- 客户id
	  ,	s.UserInfoId		   as userInfoId
	  , t1.CustomerCode        as customerCode           -- 客户编号
	  , t1.CustomerName        as customerName           -- 客户名称 
	  , s.CustomerAlias        as customer               -- 客户别称
	  , s.Address              as address                -- 送货地址
	  , s.Contacts             as contacts               -- 联系人
	  , s.Telephone            as telephone              -- 联系电话
	  , s.OrderState           as orderState             -- 订单状态
	  , sc.CompanyName         as salesCompanyName       -- 销售公司名称
	  , case when s.IsActualDelivery = 0 then "是" else "否" end as isActualDelivery -- 是否实际发货
	  , s.UserInfoId           as userInfoId             -- 销售员id
	  , s.Remarks              as remarks                -- 备注
	  , t.UnitPrice            as unitPrice              -- 单价
	  , t.SaleNumber           as saleNumber             -- 销售数量
	  , t.SalePrice            as salePrice              -- 销售单价
	  , t.TaxRate              as taxRate                -- 税率
	  , t.SaleMoney            as saleMoney              -- 销售金额
	FROM
	  salesorder s                                       -- 销售订单表
	left join salesorderdetailed t                       -- 销售订单明细表
	  on s.Id = t.SalesOrderId
	  and t.IsDel = 0
  	left join contractinfo c         -- 合同信息表
	  on s.ContractId = c.Id         -- 合同id
	  and c.IsDel = 0
	left join customerinfo t1
	  on t1.Id = s.CustomerId
	  and t1.IsDel = 0
	left join salecompany sc
	  on sc.Id = s.SalesCompanyId
	  and sc.IsDel = 0
	WHERE
	  1=1 
	  <if test="show == null">
	  	and s.OrderState in (0,4)          -- 订单状态
	  </if>
	  <if test="flag != null and flag != ''">
	  	and s.IsDel = 0
	  </if>
	  <if test="id != null and id != 0">
	    and s.Id = #{id}
	  </if>
	  <if test="orderDetailedId != null and orderDetailedId != 0">
	    and t.Id = #{orderDetailedId}
	  </if>
	  <if test="orderNumber != null and orderNumber != ''">
	    and s.OrderNumber = #{orderNumber}
	  </if>
	  <if test="type != null and type != '' and type == 'exchange'">
	    AND t.IsExchange = 0
	    AND t.IsActualDelivery = 0
	  </if>
	  <if test="type != null and type != '' and type == 'empty'">
	    AND t.IsActualDelivery = 1
	    AND t.TransportBalance <![CDATA[<>]]> 1
	  </if>
	  <if test="type == null">
	    AND t.IsActualDelivery = 0
	    AND t.IsExchange = 1
	  </if>
	  ORDER BY s.OrderNumber DESC
</select>


<!-- 查询下手订单 -->
<select id="getOrderNumberListAsUserId" parameterType="java.util.Map" resultType="OrderNumberEntity">
	SELECT
	  s.Id                     as id                     -- id
	  , s.OrderNumber          as orderNumbers           -- 订单编号
	  , s.ContractId           as contractId             -- 合同id
	  , c.ContractNumber       as contractNumber         -- 合同编号
	  , s.CustomerId           as customerId             -- 客户id
	  ,	s.UserInfoId		   as userInfoId
	  , t1.CustomerCode        as customerCode           -- 客户编号
	  , t1.CustomerName        as customerName           -- 客户名称 
	  , s.CustomerAlias        as customer               -- 客户别称
	  , s.Address              as address                -- 送货地址
	  , s.Contacts             as contacts               -- 联系人
	  , s.Telephone            as telephone              -- 联系电话
	  , s.OrderState           as orderState             -- 订单状态
	  , sc.CompanyName         as salesCompanyName       -- 销售公司名称
	  , case when s.IsActualDelivery = 0 then "是" else "否" end as isActualDelivery -- 是否实际发货
	  , s.UserInfoId           as userInfoId             -- 销售员id
	  , s.Remarks              as remarks                -- 备注
	  , t.UnitPrice            as unitPrice              -- 单价
	  , t.SaleNumber           as saleNumber             -- 销售数量
	  , t.SalePrice            as salePrice              -- 销售单价
	  , t.TaxRate              as taxRate                -- 税率
	  , t.SaleMoney            as saleMoney              -- 销售金额
	FROM
	  salesorder s                                       -- 销售订单表
	left join salesorderdetailed t                       -- 销售订单明细表
	  on s.Id = t.SalesOrderId
	  and t.IsDel = 0
  	left join contractinfo c         -- 合同信息表
	  on s.ContractId = c.Id         -- 合同id
	  and c.IsDel = 0
	left join customerinfo t1
	  on t1.Id = s.CustomerId
	  and t1.IsDel = 0
	left join salecompany sc
	  on sc.Id = s.SalesCompanyId
	  and sc.IsDel = 0
	WHERE
	  1=1 
	  	and s.IsDel = 0
	  <if test="id != null and id != 0">
	    and s.Id = #{id}
	  </if>
	  ORDER BY s.Id DESC
</select>

<!-- 物料型号 -->
<select id="getMaterielinfoList" parameterType="java.util.Map" resultType="MaterielinfoEntity">
	select
	    mai.Id                as id                   -- 物料id
	  , mai.MaterielName     as materielName         -- 物料名称
	  , mai.MaterielModel    as materielModel        -- 规格型号
	from
	  materielinfo as mai                             -- 物料信息表
	where mai.IsDel = 0
		<if test="salesOrderId != null and salesOrderId != ''">
			and mai.id IN ( 
				SELECT DISTINCT
					 case 
					 when s.IsExchange = 0
					 then ifnull(s.ExchangeMaterielId,0)
					 when s.IsExchange = 1
					 then ifnull(s.MaterielId,0)
					 ELSE 0
					 end MaterielId 
				FROM
					salesorderdetailed s
				WHERE 
					Id = #{salesOrderId} 
			)
	  	</if>
		<if test="contractId != null and contractId != ''">
			and mai.id IN ( 
				SELECT DISTINCT
					MaterielId 
				FROM
					contractdetailed 
				WHERE
					ContractId = #{contractId} 
			)
	  	</if>
		<if test="purchaseId != null and purchaseId != ''">
			and mai.id IN ( 
				SELECT DISTINCT
					MaterielInfoId 
				FROM
					purchaseorderinfo 
				WHERE
					PurchaseOrderId = #{purchaseId} 
			)
	  	</if>
	  	<if test="productID != null and productID != ''">
			and mai.id  = #{productID} 
	  	</if>
</select>
<!-- 合同信息 -->
<select id="getContractinfo" parameterType="java.util.Map" resultType="ContractEntity">
	SELECT
	  c.Id                  as id                    -- 合同id
	  , c.ContractNumber    as contractNumber        -- 合同编号
	  , c.ContractName      as contractName          -- 合同名称
	  , c.CustomerId        as customerId            -- 客户id
	  , t.CustomerName      as customerName          -- 客户名称
	  , c.SaleNumber        as saleNumber            -- 销售数量
	  , c.ContractState     as contractState         -- 合同状态
	  , c.UserInfoId        as userInfoId            -- 销售员id
	  -- , c.SalesCompanyName  as salesCompanyName      -- 销售公司名称
	  , c.ContractDate      as contractDate          -- 合同日期
	  , c.Remarks           as remarks               -- 备注
	  , c.ContractRoute     as contractRoute         -- 合同路径
	  , c.IsIncoming        as isIncoming            -- 是否来料加工
	FROM
	  contractinfo c
	left join customerinfo t
	  on t.Id = c.CustomerId
	  and t.IsDel = 0
	WHERE
	  1=1
	  and c.IsDel = 0
	  <if test="contractNumber != null and contractNumber != ''">
	    and c.ContractNumber = #{contractNumber}
	  </if>
</select>
<!-- 新增出库单信息 -->
<insert id="addExportMeasure" parameterType="OutboundEntity" useGeneratedKeys="true" keyProperty="id">
	INSERT 
	INTO exportmeasure(
	    Serial_ID            -- 流水号
	  , SalesOrderId         -- 销售订单id
	  , PlateNumber          -- 车牌号码
	  , Client               -- 客户名称
	  , CustomerAlias        -- 客户别称
	  , Address              -- 送货地址
	  , Consignee            -- 收货人
	  , ConsigneePhone       -- 收货人电话
	  , ProductID            -- 物料id
	  , LbsMaterialName      -- 磅单打印物料名称
	  , LbsOutputName        -- 磅单输出名称
	  , CartWeighType        -- 是否大车称重
	  , DeliveryMan          -- 送货人
	  , DeliveryManPhone     -- 送货电话
	  , CarOwner             -- 车主
	  , CarOwnerTelephone    -- 车主电话 
	  , FacingSlipNum        -- 封签号
	  , Remarks              -- 备注
	  , Priority             -- 优先级 0正常, 1 优先
	  , SaleCompanyName      -- 销售公司名称
	  , Suttle               -- 净重
	  , GrossWeight          -- 毛重
	  , TareWeight           -- 皮重
	  , OutTypeMark          -- 出库单类型标识 0：出库单 1：未入厂出库单
	  , PurchaseContractId   -- 采购合同
	  , Amount               -- 销售录入 结算数量
	  , OutType              -- 出库单状态 0：正常 1：整车调拨（作废） 2：半车调拨 3：退货
	  , IsTesting            -- 是否检测
	  , ValidFlag            -- 有效标识,0无效,1有效
	  , StartAddress         -- 起运地
	  , IsDel                -- 删除标记
	  , Creater              -- 创建人
	  , CreaterDate          -- 创建时间
	  , OrderDetailedId      -- 订单详情ID
	  , ConsigneeAddress      -- 订单详情ID
	  <if test="factoryTime != null and factoryTime != ''">
	  	, FactoryTime      -- 订单详情ID
  	  </if>
	) 
	VALUES (
	   #{serialId} 
      , #{salesOrderId}
	  , #{plateNumber}
	  , #{client}
	  , #{customerAlias}
	  , #{address}
	  , #{consignee}
	  , #{consigneePhone}
	  , #{productID}
	  , #{lbsMaterialName}
	  , #{lbsOutputName}
	  , #{cartWeighType}
	  , #{deliveryMan}
	  , #{deliveryManPhone}
	  , #{carOwner}
	  , #{carOwnerTelephone}
	  , #{facingSlipNum}
	  , #{remarks}
	  , #{priority}
	  , #{saleCompanyName}
	  , #{suttle}
	  , #{grossWeight}
	  , #{tareWeight}
	  , #{outTypeMark}
	  , #{purchaseContractId}
	  , #{amount}
	  , #{outType}
	  , #{isTesting}
	  , #{validFlag}
	  , #{StartAddress}
	  , 0
	  , #{creater}
	  , now()
	  , #{orderDetailedId}
	  , #{consigneeAddress}
	  <if test="factoryTime != null and factoryTime != ''">
	  	, #{factoryTime}
	  </if>
	) 	
	<selectKey resultType="Integer" order="AFTER" keyProperty="id">
         SELECT LAST_INSERT_ID() AS Id
    </selectKey>
</insert>

<!-- 更新出库单信息 -->
<!-- , PurchaseContractId=#{purchaseContractId} 采购合同 -->
<!-- , Amount = #{amount}                       结算数量 -->
<update id="updateExportMeasure" parameterType="OutboundEntity">
	UPDATE exportmeasure 
	SET
	  PlateNumber = #{plateNumber}               -- 车牌号码
	  , Client = #{client}                       -- 客户名称
	  , CustomerAlias = #{customerAlias}         -- 客户别称
	  , Address = #{address}                     -- 送货地址
	  , Consignee = #{consignee}                 -- 收货人
	  , ConsigneePhone = #{consigneePhone}       -- 送货地址
	  , ProductID = #{productID}                 -- 物料id
	  , SalesOrderId = #{salesOrderId}           -- 销售订单id
	  , LbsMaterialName = #{lbsMaterialName}     -- 磅单打印物料名称
	  , LbsOutputName = #{lbsOutputName}         -- 磅单输出名称
	  , CartWeighType = #{cartWeighType}         -- 是否大车称重
	  , DeliveryMan = #{deliveryMan}             -- 送货人
	  , DeliveryManPhone = #{deliveryManPhone}   -- 送货人电话
	  , CarOwner = #{carOwner}                   -- 车主
	  , FacingSlipNum = #{facingSlipNum}         -- 封签号
	  , CarOwnerTelephone = #{carOwnerTelephone} -- 车主电话
	  , Remarks = #{remarks}                     -- 备注
	  , Suttle = #{suttle}                       -- 净重
	  , SaleCompanyName = #{saleCompanyName}     -- 销售公司名称
	  , IsTesting = #{isTesting}                 -- 是否检测
	  , Reviser = #{reviser}                     -- 修改人
	  , ReviserDate = now()                      -- 修改时间
	  , OutType = #{outType}                     -- 出库单状态 0：正常 1：调拨 2：退货 3:空发 4:兑换
	  , OrderDetailedId = #{orderDetailedId}     -- 销售订单详情id
	  , ConsigneeAddress = #{consigneeAddress}     -- 销售订单详情id
	  , StartAddress = #{StartAddress}
	  <if test="tareWeight != null and tareWeight != ''">
	    , tareWeight = #{tareWeight}
	 </if>
	 <if test="grossWeight != null and grossWeight != ''">
	    , grossWeight = #{grossWeight}
	 </if>
      , FactoryTime = #{factoryTime}
	WHERE
	  Id = #{id}
</update>
<!-- 获取所有车牌号码 -->
<select id="getAllPlateNumbers" parameterType="java.util.Map" resultType="CarInfo">
     select distinct * from carinfo where IsDel = 0
     <if test="plateNumber != null and plateNumber != ''">
	    and plateNumber = #{plateNumber}
	 </if>
	 ORDER BY
  	     CreaterDate desc
</select>
<!-- 采购合同list -->
<select id="getPurchasecontractList" parameterType="java.util.Map" resultType="Purchasecontract">
	SELECT
	  Id                         as id                      -- id
	  , SerialID                 as billNumber              -- 单据编号
	  , DATE_FORMAT(date, '%Y-%m-%d') as date               -- 日期
	  , PurchaseRequisitionId    as purchaseRequisitionId   -- 采购申请单编号
	  , SupplierId               as supplierId              -- 供应商id
	  , ContractState            as contractState           -- 合同状态（数据字典） 0:执行中 1:未执行 2:完成 3:作废 4:未鉴定 5:其他
	  , ContractRoute            as contractRoute           -- 合同附件路径
	  , case 
		when FreightBalance=0 then '我方'
		when FreightBalance=1 then '对方'
		when FreightBalance=2 then '对方代垫'
		else ""
		END freightBalance																								-- 运费结算情况（数据字典）0:我方 1:对方 2:我方垫付
	  , ExpectMoney              as expectMoney             -- 预计运费金额
	FROM
	  purchasecontract 
	WHERE
	   1=1
	  <if test="id != null and id != 0">
	    and Id = #{id}
	  </if>
	  and ContractState not in (2, 3)
	  and IsDel = 0
</select>
<!-- 获取无法选中的车辆信息 -->
<select id="queryCarInUse" resultType="map">
	SELECT DISTINCT
		PlateNumber 
	FROM
		exportmeasure
	WHERE
		IsDel = 0
	AND Suttle IS NULL
</select>
<!-- 获取销售订单详情信息 -->
<select id="getOrderDetail" parameterType="java.util.Map" resultType="map">
	SELECT
		s.UnitPrice,
		s.ListModel,
		d.Content AS TransportBalance,
		DATE_FORMAT(s.ExpectedDeliveryDate,'%Y-%m-%d') ExpectedDeliveryDate,
		s.SaleNumber,
		s.SalePrice,
		s.TaxRate,
		s.SaleMoney,
		s.Proportion
	FROM
		salesorderdetailed s 
	LEFT JOIN datadictionary d ON s.TransportBalance = d.Code AND d.type = 'ysjsqk' AND d.IsDel = 0
	WHERE
		(s.MaterielId = #{materielId} OR s.ExchangeMaterielId = #{materielId})
		AND s.SalesOrderId = #{orderNumber}
		AND s.IsDel = 0
</select>
<!-- 获取空发出库单 -->
<select id="getEmptyOutboundInfo" resultType="map">
	SELECT
		* 
	FROM
		exportmeasure 
	WHERE
		OutType = 3
		AND IsDel = 0
</select>
<!-- 关联空发出库单 -->
<insert id="insertEmptyOutBound" parameterType="java.util.Map">
	INSERT INTO
	outemptyrelation (
		OutWarehouseId,
		EmptyCarId,
		IsDel,
		Creater,
		CreaterDate
	) VALUES (
		#{outWarehouseId}
		,#{emptyCarId}
		,0
		,#{creater}
		,now()	
	)
</insert>
<!-- 查询关联空发出库单 -->
<select id="queryEmptyOutBoundById" parameterType="String" resultType="map">
	SELECT * FROM outemptyrelation WHERE OutWarehouseId = #{id} AND IsDel = 0
</select>
<update id="deleteEmptyOutBound" parameterType="map">
	UPDATE outemptyrelation SET IsDel = 1,Reviser = #{reviser}, ReviserDate=now() WHERE OutWarehouseId = #{outWarehouseId} AND EmptyCarId = #{emptyCarId}
</update>
<select id="getAllOutboundList" resultType="map">
	SELECT
		e.PlateNumber,
		CONCAT(mi.MaterielName, "-", mi.MaterielModel) MaterielInfo,
		e.Serial_ID,
		s.Transports
	FROM
		exportmeasure e
	LEFT JOIN materielinfo mi ON mi.IsDel = 0 AND e.ProductID = mi.Id 
	LEFT JOIN salesorderdetailed s on e.OrderDetailedId = s.Id AND s.IsDel = 0
	WHERE
		e.OutType <![CDATA[<>]]> 3
		AND e.ValidFlag = 1
		AND e.IsDel = 0
</select>
<select id="getTransportList" parameterType="map" resultType="map">
	SELECT
		* 
	FROM
		transportlist 
	WHERE
		SerialID = #{plateNumber}
	AND IsDel = 0
</select>
<select id="queryEmptyList" parameterType="map" resultType="map">
	SELECT
		* 
	FROM
		outemptyrelation 
	WHERE
		1=1
	<if test='flag == "N"'>
		AND EmptyCarId = #{serialID}
	</if>
	<if test='flag == "Y"'>
		AND OutWarehouseId = #{serialID}
	</if>
	AND IsDel = 0
</select>
<select id="queryOutBoundInfoBySerialId" parameterType="String" resultType="OutboundEntity">
	SELECT
		* 
	FROM
		exportmeasure 
	WHERE
		Serial_ID = #{Id}
	AND IsDel = 0
</select>
<select id="queryNoWeight" parameterType="map" resultType="Integer">
	SELECT
		count( 1 ) 
	FROM
		noweighoutwarehouse 
	WHERE
		DispatchOutWarehouseId = #{id}
	AND Type = 1	
</select>
<select id="getOrderDetailInfo" parameterType="map" resultType="map">
	SELECT
		s.Id,
		s.OrderDetailedNumber,
		s.TransportBalance,
		CONCAT(mi.MaterielName, "-", mi.MaterielModel) MaterielInfo,
		CONCAT(mi2.MaterielName, "-", mi2.MaterielModel) materielChangeInfo,
		IFNULL(s.Transports, "") Transports,
		s.Distance,
		s.ListModel,
		s.Proportion,
		s.IsExchange isExchange
	FROM
		salesorderdetailed s
	left join materielinfo mi ON mi.IsDel = 0 AND s.MaterielId = mi.Id 
	left join materielinfo mi2 ON mi2.IsDel = 0 AND s.ExchangeMaterielId = mi2.Id 
	WHERE
		s.SalesOrderId = #{id}	
	AND s.IsDel = 0
	AND s.IsCancel = 1
	<if test="type != null and type != '' and type == 'exchange'">
    	AND s.IsExchange = 0
    	AND s.IsActualDelivery = 0
  	</if>
  	<if test="type != null and type != '' and type == 'empty'">
   		AND s.IsActualDelivery = 1
   		AND s.TransportBalance <![CDATA[<>]]> 1
  	</if>
  	<if test="type == null">
	    AND s.IsActualDelivery = 0
	    AND s.IsExchange = 1
  	</if>
</select>
<select id="getCustomerTrans" parameterType="map" resultType="map">
	SELECT
		*
	FROM
		customertransports cs
	LEFT JOIN customerinfo ci ON cs.CustomerId = ci.Id AND ci.IsDel = 0
	LEFT JOIN salesorderdetailed s ON s.Transports = cs.Id AND s.IsDel = 0
	WHERE
	    cs.IsDel = 0
	    <if test="customerName != null and customerName != ''">
		ci.CustomerName = #{customerName}
		</if>
		<if test="id != null and id != ''">
   		AND s.id = #{id}
  	    </if>	
</select>
<select id="checkTransList" parameterType="map" resultType="map">
	SELECT
		* 
	FROM
		transportlist 
	WHERE
		SerialID = #{serialId}
	AND IsDel = 0	
</select>
<select id="getDiaoMaterielId" parameterType="map" resultType="map">
	select MaterielId, ExchangeMaterielId,IsExchange from salesorderdetailed where Id = #{orderId}
</select>
<select id="getDiaoOrderNumber" parameterType="map" resultType="map">
<!-- 	SELECT
		s.Id,
		s.OrderNumber,
		u.UserName customerName,
		s.CustomerAlias customer,
		c.ContractNumber contractNumber
		,cus.customerCode customerCode
	FROM
		salesorder s
	LEFT JOIN salesorderdetailed d ON s.Id = d.SalesOrderId AND d.IsDel = 0 
	LEFT JOIN userinfo u on u.Id = s.UserInfoId and u.IsDel = 0
	LEFT JOIN contractinfo c on c.Id = s.ContractId and c.IsDel = 0
	left join customerinfo as cus   
	  on c.CustomerId = cus.Id and cus.IsDel = 0
	WHERE s.IsDel = 0
		AND d.MaterielId = #{materielId}
		AND d.TransportBalance <![CDATA[<>]]> 1
		AND d.IsExchange = 1
		AND s.OrderState <![CDATA[<>]]> 2
		AND s.OrderState <![CDATA[<>]]> 3
		AND d.id <![CDATA[<>]]> #{orderDetailId}

	UNION

	SELECT
		s.Id,
		s.OrderNumber,
		u.UserName customerName,
		s.CustomerAlias customer,
		c.ContractNumber contractNumber
		,cus.customerCode customerCode
	FROM
		salesorder s
	LEFT JOIN salesorderdetailed d ON s.Id = d.SalesOrderId AND d.IsDel = 0 
	LEFT JOIN userinfo u on u.Id = s.UserInfoId and u.IsDel = 0
	LEFT JOIN contractinfo c on c.Id = s.ContractId and c.IsDel = 0
	left join customerinfo as cus    
	  on c.CustomerId = cus.Id and cus.IsDel = 0
	WHERE s.IsDel = 0
		AND d.ExchangeMaterielId = #{materielId}
		AND d.TransportBalance <![CDATA[<>]]> 1
		and d.IsExchange = 0
		AND s.OrderState <![CDATA[<>]]> 2
		AND s.OrderState <![CDATA[<>]]> 3
		AND d.id <![CDATA[<>]]> #{orderDetailId} -->
		SELECT * FROM((SELECT
		s.Id,
		s.OrderNumber,
		u.UserName customerName,
		s.CustomerAlias customer,
		c.ContractNumber contractNumber
		,cus.customerCode customerCode
	FROM
		salesorder s
	LEFT JOIN salesorderdetailed d ON s.Id = d.SalesOrderId AND d.IsDel = 0 
	LEFT JOIN userinfo u on u.Id = s.UserInfoId and u.IsDel = 0
	LEFT JOIN contractinfo c on c.Id = s.ContractId and c.IsDel = 0
	left join customerinfo as cus    -- 客户信息表
	  on c.CustomerId = cus.Id and cus.IsDel = 0
	WHERE s.IsDel = 0
		AND d.MaterielId = #{materielId}
		AND d.TransportBalance <![CDATA[<>]]> 1
		AND d.IsExchange = 1
		AND s.OrderState <![CDATA[<>]]> 2
		AND s.OrderState <![CDATA[<>]]> 3
		AND d.id <![CDATA[<>]]> #{orderDetailId})

	UNION

	(SELECT
		s.Id,
		s.OrderNumber,
		u.UserName customerName,
		s.CustomerAlias customer,
		c.ContractNumber contractNumber
		,cus.customerCode customerCode
	FROM
		salesorder s
	LEFT JOIN salesorderdetailed d ON s.Id = d.SalesOrderId AND d.IsDel = 0 
	LEFT JOIN userinfo u on u.Id = s.UserInfoId and u.IsDel = 0
	LEFT JOIN contractinfo c on c.Id = s.ContractId and c.IsDel = 0
	left join customerinfo as cus    -- 客户信息表
	  on c.CustomerId = cus.Id and cus.IsDel = 0
	WHERE s.IsDel = 0
		AND d.ExchangeMaterielId = #{materielId}
		AND d.TransportBalance <![CDATA[<>]]> 1
		and d.IsExchange = 0
		AND s.OrderState <![CDATA[<>]]> 2
		AND s.OrderState <![CDATA[<>]]> 3
		AND d.id <![CDATA[<>]]> #{orderDetailId})
) as a 
ORDER BY a.OrderNumber DESC
</select>
<select id="getDiaoOrderDetail" parameterType="map" resultType="map">
<!-- 	SELECT
		s.Id,
		s.OrderDetailedNumber,
		CONCAT( mi.MaterielName, "-", mi.MaterielModel ) MaterielInfo,
		IFNULL( s.Transports, "" ) Transports,
		s.Transports ,
		s.IsExchange isExchange
	FROM
		salesorderdetailed s
	LEFT JOIN materielinfo mi ON mi.IsDel = 0 
		AND s.MaterielId = mi.Id
	WHERE
		s.IsDel = 0 
		AND s.IsCancel = 1 
		AND s.SalesOrderId = #{id}
		AND MaterielId = #{materielId}
		AND s.IsExchange = 1 
		AND s.id <![CDATA[<>]]> #{orderDetailId}
		AND s.TransportBalance <![CDATA[<>]]> 1
	
	union 
	
	SELECT
		s.Id,
		s.OrderDetailedNumber,
		CONCAT( mi.MaterielName, "-", mi.MaterielModel ) MaterielInfo,
		IFNULL( s.Transports, "" ) Transports,
		s.Transports,
		s.IsExchange isExchange
	FROM
		salesorderdetailed s
	LEFT JOIN materielinfo mi ON mi.IsDel = 0 
		AND s.ExchangeMaterielId = mi.Id
	WHERE
		s.IsDel = 0 
		AND s.IsCancel = 1 
		AND s.SalesOrderId = #{id}
		AND ExchangeMaterielId = #{materielId}
		AND s.IsExchange = 0
		AND s.id <![CDATA[<>]]> #{orderDetailId}
		AND s.TransportBalance <![CDATA[<>]]> 1 -->
		
		
		SELECT * FROM((SELECT
 s.Id,
 s.OrderDetailedNumber,
 CONCAT(
  mi.MaterielName,
  "-",
  mi.MaterielModel
 ) MaterielInfo,
 IFNULL(s.Transports, "") Transports1,
 s.Transports,
 s.IsExchange isExchange
FROM
 salesorderdetailed s
LEFT JOIN materielinfo mi ON mi.IsDel = 0
AND s.MaterielId = mi.Id
WHERE
 s.IsDel = 0
AND s.IsCancel = 1
AND s.SalesOrderId = #{id}
AND MaterielId = #{materielId}
AND s.IsExchange = 1
AND s.id <![CDATA[<>]]> #{orderDetailId}
AND s.TransportBalance <![CDATA[<>]]> 1)
UNION
 (SELECT
  s.Id,
  s.OrderDetailedNumber,
  CONCAT(
   mi.MaterielName,
   "-",
   mi.MaterielModel
  ) MaterielInfo,
  IFNULL(s.Transports, "") Transports1,
  s.Transports,
  s.IsExchange isExchange
 FROM
  salesorderdetailed s
 LEFT JOIN materielinfo mi ON mi.IsDel = 0
 AND s.ExchangeMaterielId = mi.Id
 WHERE
  s.IsDel = 0
 AND s.IsCancel = 1
 AND s.SalesOrderId = #{id}
 AND ExchangeMaterielId = #{materielId}
 AND s.IsExchange = 0
 AND s.id <![CDATA[<>]]> #{orderDetailId}
 AND s.TransportBalance <![CDATA[<>]]> 1  )
) as a
ORDER BY a.OrderDetailedNumber DESC
</select>
<select id="getConsigneeInfo" parameterType="map" resultType="map">
	SELECT 
		DISTINCT e.Consignee,
		e.ConsigneePhone
	FROM exportmeasure e
	LEFT JOIN salesorderdetailed d on e.OrderDetailedId = d.Id and d.IsDel = 0
	WHERE e.isDel = 0 
		AND d.Transports = #{consigneeAddress} 
	ORDER BY
		e.Consignee, e.ConsigneePhone
</select>
<select id="getOutBoundWeight" parameterType="map" resultType="map">
	SELECT 
		GrossWeight,
		Suttle,
		TareWeight,
		Amount,
		DATE_FORMAT(FactoryTime,'%Y-%m-%d %H:%i:%s') FactoryTime,
		DATE_FORMAT(EnterDate,'%Y-%m-%d %H:%i:%s') EnterDate
	FROM
		 exportmeasure
	WHERE 
	 	Id = #{id}
</select>
<select id="getFactoryTime" parameterType="String" resultType="String">
	SELECT 
		DATE_FORMAT(FactoryTime,'%Y-%m-%d') FactoryTime
	FROM
		 exportmeasure
	WHERE 
	 	Serial_ID = #{id}
</select>
<update id="deleteStoragemeasure" parameterType="map">
	UPDATE storagemeasure set IsDel = 1 WHERE OutWarehouseId = #{outWarehouseId}
</update>
<update id="deleteNoWeight" parameterType="map">
	UPDATE noweighoutwarehouse set IsDel = 1 WHERE DispatchOutWarehouseId = #{outWarehouseId}	
</update>
<update id="deleteEmptyListN" parameterType="String">
	UPDATE outemptyrelation set IsDel = 1 WHERE EmptyCarId = #{serialID}	
</update>
<update id="deleteEmptyListY" parameterType="String">
	UPDATE outemptyrelation set IsDel = 1 WHERE OutWarehouseId = #{serialID}	
</update>
<update id="updateOutBoundWeight" parameterType="map">
	UPDATE exportmeasure set GrossWeight = #{grossWeight}, Suttle = #{sullte}, Amount = #{amount}, EnterDate = #{enterDate}, TareWeight = #{tareWeight}, FactoryTime = #{factoryTime} WHERE Id = #{id}
</update>
<update id="updateExamine" parameterType="map">
	UPDATE exportmeasure 
	SET
	  IsExamine = #{isExamine}
	WHERE
	  Id = #{id}
</update>


	<!-- 添加运输单 -->
	<insert id="addTranSportList" parameterType="java.util.Map">
		INSERT 
		INTO transportlist(
		DispatchOutWarehouseId 
		  ,	BillNumber
		  , SerialID
		  , TransportParty
		  , MaterielId
		  , Model
		  , CarOwner
		  , CarOwnerTelephone 
		  , RiseLoss
		  , EndAddress
		  , SettlementKilometre
		  , Weigh
		  , CollectWeigh
		  , FreightPrice
		  , FreightMoney
		  , escortPrice
		  , EscortDays
		  , EscortMoney
		  , PlateNumber
		  , Reviser
		  , IsDel
		  , Remarks
		  , TransportRoute
		  , type
		  ,	SettleDate
		  , IsMention
		  , OutgoingTime
		  , Creater
		  , CreaterDate
		) 
		VALUES ( 
		 #{dispatchOutWarehouseId}
		  , #{billNumber}
		  , #{serialID}
		  , #{transportParty}
		  , #{materielId}
		  , #{model}
		  , #{carOwner}
		  , #{carOwnerTelephone} 
		  , #{riseLoss}
		  , #{endAddress}
		  , #{settlementKilometre}
		  , #{weigh}
		  , #{collectWeigh}
		  , #{freightPrice}
		  , #{freightMoney}
		  , #{escortPrice}
		  , #{escortDays}
		  , #{escortMoney}
		  , #{plateNumber}
		  , #{reviser}
		  , 0
		  ,	#{remarks}
		  , #{transportRoute}
		  , #{type}
		  ,	#{settleDate}
 		  ,	#{isMention}
 		  , NOW()
		  , #{creater}
		  , NOW()
		) 
	</insert>
	
		<update id="updateTranSportList" parameterType="java.util.Map">
			UPDATE transportlist 
		SET
		   TransportParty = #{transportParty}
		  , MaterielId = #{materielId}
		  , Model = #{model}
		  , CarOwner = #{carOwner}
		  , CarOwnerTelephone = #{carOwnerTelephone} 
		  , EndAddress = #{endAddress}
		  , Kilometre = #{kilometre}
		  , SettlementKilometre = #{settlementKilometre}
		  , Weigh = #{weigh}
		  , RiseLoss = #{riseLoss}
		  , CollectWeigh = #{collectWeigh}
		  , FreightPrice = #{freightPrice}
		  , FreightMoney = #{freightMoney}
		  , EscortDays = #{escortDays}
		  , EscortPrice = #{escortPrice}
		  , EscortMoney = #{escortMoney}
		  , PlateNumber = #{plateNumber}
		  , Remarks = #{remarks}
		  , type = #{type}
		  , SettleDate = #{settleDate}
		  , IsMention = #{isMention}
		  ,	Reviser = #{userName}
		  , ReviserDate = NOW()
		WHERE
		  DispatchOutWarehouseId = #{dispatchOutWarehouseId}
	</update>
	
			<update id="updateTranSportListOutType" parameterType="java.util.Map">
			UPDATE transportlist 
		SET
		  type = #{type}
		  ,	Reviser = #{userName}
		  , ReviserDate = NOW()
		WHERE
		  DispatchOutWarehouseId = #{dispatchOutWarehouseId}
	</update>
	
		<!-- 删除运输单 -->
	<update id="delTranSportList" parameterType="java.util.Map">
		UPDATE transportlist 
		SET
			IsDel = 1
		  , ReviserDate = NOW()
		WHERE
		  DispatchOutWarehouseId = #{dispatchOutWarehouseId}
	</update>

	
</mapper>